# Some rules need a workaround because the configuration value is not on the same line of the key.
# Therefore, a workaround is needed. Using the \0 delimiter does not seem to execute the regex on all file content
#
# The approach used in the following rules set the file content split delimiter to "true" and checks with a regexp
# if the required configuration value is enabled or not. The regexp was thoroughly tested to avoid false positives.

benchmark_configs: {
  id: "cassandra-auditing"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Ensure that auditing is enabled"
    description:
      "Audit logging in Cassandra logs every incoming CQL command request, Authentication "
      "(successful as well as unsuccessful login) to C* node. Currently, there are two "
      "implementations provided, the custom logger can be implemented and injected with the "
      "class name as a parameter in cassandra.yaml."
    rationale:
      "Unauthorized attempts to create, drop or alter users or data should be a concern."
    remediation:
      "Enable the Cassandra Auditing feature. Note that on the Open Source version this feature is available only starting from version 4."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
    "check_alternatives:{"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    existence:{should_exist: true}"
    "    non_compliance_msg: \"Cassandra configuration file does not exist\""
    "  }"

    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    content_entry: {"
    "      delimiter: \"true\""
    "      match_type: ALL_MATCH_ANY_ORDER"
    "      match_criteria: {"
    "        filter_regex: \".*(^|\\\\n)[^#\\\\S]*audit_logging_options:[\\\\s]*(#[ -~]*)*\\\\n(\\\\n|[\\\\t #]+[ -~]*\\\\n)*[^#\\\\S\\\\n]+enabled:\\\\s*\""
    "        expected_regex: \".*(^|\\\\n)[^#\\\\S]*audit_logging_options:[\\\\s]*(#[ -~]*)*\\\\n(\\\\n|[\\\\t #]+[ -~]*\\\\n)*[^#\\\\S\\\\n]+enabled:\\\\s*\""
    "      }"
    "    }"
    "    non_compliance_msg: \"Cassandra has auditing disabled\""
    "  }"
    "}"
  }
}

benchmark_configs: {
  id: "cassandra-clientencryption"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Client Encryption"
    description:
      "Cassandra offers the option to encrypt data in transit between the client and nodes on the "
      "cluster. By default client encryption is turned off."
    rationale:
      "Data in transit between the client and node on the cluster should be encrypted to avoid "
      "network snooping, whether legitimate or not. "
    remediation:
      "The client encryption should be implemented before anyone accesses the Cassandra server."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
    "check_alternatives:{"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    existence:{should_exist: true}"
    "    non_compliance_msg: \"Cassandra configuration file does not exist\""
    "  }"

    "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
      "    content_entry: {"
      "      delimiter: \"true\""
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*(^|\\\\n)[^#\\\\S]*client_encryption_options:[\\\\s]*(#[ -~]*)*\\\\n(\\\\n|[\\\\t #]+[ -~]*\\\\n)*[^#\\\\S\\\\n]+enabled:\\\\s*\""
      "        expected_regex: \".*(^|\\\\n)[^#\\\\S]*client_encryption_options:[\\\\s]*(#[ -~]*)*\\\\n(\\\\n|[\\\\t #]+[ -~]*\\\\n)*[^#\\\\S\\\\n]+enabled:\\\\s*\""
      "      }"
      "    }"
      "    non_compliance_msg: \"Cassandra does not encrypt communication between clients and nodes\""
      "  }"
      "}"
  }
}