benchmark_configs: {
  id: "cramfs-module-not-available"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:debian_linux:12.0" version: "1.1.0" benchmark_document: "CIS Debian Linux 12" }
    title: "Ensure cramfs kernel module is not available"
    description:
      "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in"
      "small footprint systems. A cramfs image can be used without having to first"
      "decompress the image."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack surface of the"
      "system. If this filesystem type is not needed, disable it."
    remediation:
      "Run the following script to unload and disable the cramfs module:"
      "- IF - the cramfs kernel module is available in ANY installed kernel:"		
      "• Create a file ending in .conf with install cramfs /bin/false in the"
      "/etc/modprobe.d/ directory"
      "• Create a file ending in .conf with blacklist cramfs in the /etc/modprobe.d/"
      "directory"
      "• Run modprobe -r cramfs 2>/dev/null; rmmod cramfs 2>/dev/null to"
      "remove cramfs from the kernel"
      "- IF - the cramfs kernel module is not available on the system, or pre-compiled into the"
      "kernel, no remediation is necessary"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"cramfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install cramfs .*\""
      "          expected_regex: \"install cramfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist cramfs.*\""
      "          expected_regex: \"blacklist cramfs.*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"cramfs .*\""
      "          expected_regex: \"cramfs .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"cramfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"	  
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install cramfs .*\""
      "          expected_regex: \"install cramfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist cramfs.*\""
      "          expected_regex: \"blacklist cramfs.*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}

benchmark_configs: {
  id: "freevxfs-module-not-available"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:debian_linux:12.0" version: "1.1.0" benchmark_document: "CIS Debian Linux 12" }
    title: "Ensure freevxfs kernel module is not available"
    description:
      "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the"
      "primary filesystem type for HP-UX operating systems."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack surface of the"
      "system. If this filesystem type is not needed, disable it."
    remediation:
      "Run the following script to unload and disable the freevxfs module:"
      "- IF - the freevxfs kernel module is available in ANY installed kernel:"
      "• Create a file ending in .conf with install freevxfs /bin/false in the"
      "/etc/modprobe.d/ directory"
      "• Create a file ending in .conf with blacklist freevxfs in the"
      "/etc/modprobe.d/ directory"
      "• Run modprobe -r freevxfs 2>/dev/null; rmmod freevxfs 2>/dev/null"
      "to remove freevxfs from the kernel"
      "- IF - the freevxfs kernel module is not available on the system, or pre-compiled into"
      "the kernel, no remediation is necessary"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"freevxfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install freevxfs .*\""
      "          expected_regex: \"install freevxfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist freevxfs.*\""
      "          expected_regex: \"blacklist freevxfs.*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"freevxfs .*\""
      "          expected_regex: \"freevxfs .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"freevxfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"	  
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install freevxfs .*\""
      "          expected_regex: \"install freevxfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist freevxfs.*\""
      "          expected_regex: \"blacklist freevxfs.*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}

benchmark_configs: {
  id: "hfs-module-not-available"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:debian_linux:12.0" version: "1.1.0" benchmark_document: "CIS Debian Linux 12" }
    title: "Ensure hfs kernel module is not available"
    description:
      "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS"
      "filesystems."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack surface of the"
      "system. If this filesystem type is not needed, disable it."
    remediation:
      "Run the following script to unload and disable the hfs module:"
      "- IF - the hfs kernel module is available in ANY installed kernel:"
      "• Create a file ending in .conf with install hfs /bin/false in the"
      "/etc/modprobe.d/ directory"
      "• Create a file ending in .conf with blacklist hfs in the /etc/modprobe.d/"
      "directory"
      "• Run modprobe -r hfs 2>/dev/null; rmmod hfs 2>/dev/null to remove"
      "hfs from the kernel"
      "- IF - the hfs kernel module is not available on the system, or pre-compiled into the"
      "kernel, no remediation is necessary"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"hfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install hfs .*\""
      "          expected_regex: \"install hfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist hfs.*\""
      "          expected_regex: \"blacklist hfs.*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"hfs .*\""
      "          expected_regex: \"hfs .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"hfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"	  
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install hfs .*\""
      "          expected_regex: \"install hfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist hfs.*\""
      "          expected_regex: \"blacklist hfs.*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}

benchmark_configs: {
  id: "hfsplus-module-not-available"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:debian_linux:12.0" version: "1.1.0" benchmark_document: "CIS Debian Linux 12" }
    title: "Ensure hfsplus kernel module is not available"
    description:
      "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that"
      "allows you to mount Mac OS filesystems."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack surface of the"
      "system. If this filesystem type is not needed, disable it."
    remediation:
      "Run the following script to unload and disable the hfsplus module:"
      "- IF - the hfsplus kernel module is available in ANY installed kernel:"
      "• Create a file ending in .conf with install hfsplus /bin/false in the"
      "/etc/modprobe.d/ directory"
      "• Create a file ending in .conf with blacklist hfsplus in the /etc/modprobe.d/"
      "directory"
      "• Run modprobe -r hfsplus 2>/dev/null; rmmod hfsplus 2>/dev/null to remove"
      "hfsplus from the kernel"
      "- IF - the hfsplus kernel module is not available on the system, or pre-compiled into the"
      "kernel, no remediation is necessary"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"hfsplus.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install hfsplus .*\""
      "          expected_regex: \"install hfsplus /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist hfsplus.*\""
      "          expected_regex: \"blacklist hfsplus.*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"hfsplus .*\""
      "          expected_regex: \"hfsplus .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"hfsplus.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"	  
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install hfsplus .*\""
      "          expected_regex: \"install hfsplus /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist hfsplus.*\""
      "          expected_regex: \"blacklist hfsplus.*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}

benchmark_configs: {
  id: "jffs2-module-not-available"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:debian_linux:12.0" version: "1.1.0" benchmark_document: "CIS Debian Linux 12" }
    title: "Ensure jffs2 kernel module is not available"
    description:
      "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem"
      "used in flash memory devices."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack surface of the"
      "system. If this filesystem type is not needed, disable it."
    remediation:
      "Run the following script to unload and disable the jffs2 module:"
      "- IF - the jffs2 kernel module is available in ANY installed kernel:"
      "• Create a file ending in .conf with install jffs2 /bin/false in the"
      "/etc/modprobe.d/ directory"
      "• Create a file ending in .conf with blacklist jffs2 in the /etc/modprobe.d/"
      "directory"
      "• Run modprobe -r jffs2 2>/dev/null; rmmod jffs2 2>/dev/null to remove"
      "jffs2 from the kernel"
      "- IF - the jffs2 kernel module is not available on the system, or pre-compiled into the"
      "kernel, no remediation is necessary"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"jffs2.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install jffs2 .*\""
      "          expected_regex: \"install jffs2 /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist jffs2.*\""
      "          expected_regex: \"blacklist jffs2.*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"jffs2 .*\""
      "          expected_regex: \"jffs2 .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"jffs2.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"	  
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install jffs2 .*\""
      "          expected_regex: \"install jffs2 /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist jffs2.*\""
      "          expected_regex: \"blacklist jffs2.*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}

benchmark_configs: {
  id: "overlayfs-module-not-available"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:debian_linux:12.0" version: "1.1.0" benchmark_document: "CIS Debian Linux 12" }
    title: "Ensure overlayfs kernel module is not available"
    description:
      "overlayfs is a Linux filesystem that layers multiple filesystems to create a single"
      "unified view which allows a user to \"merge\" several mount points into a unified"
      "filesystem."
    rationale:
      "The overlayfs has known CVE's: CVE-2023-32629, CVE-2023-2640, CVE-2023-"
      "0386. Disabling the overlayfs reduces the local attack surface by removing support for"	
      "unnecessary filesystem types and mitigates potential risks associated with unauthorized"
      "execution of setuid files, enhancing the overall system security."
    remediation:
      "Run the following script to verify:"
      "- IF - the overlayfs kernel module is available in ANY installed kernel, verify:"
      "• An entry including /bin/true or /bin/false exists in a file within the"
      "/etc/modprobe.d/ directory"
      "• The module is deny listed in a file within the /etc/modprobe.d/ directory"
      "• The module is not loaded in the running kernel"
      "- IF - the overlayfs kernel module is not available on the system, or pre-compiled into"
      "the kernel, no additional configuration is necessary"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"overlayfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install overlayfs .*\""
      "          expected_regex: \"install overlayfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist overlayfs.*\""
      "          expected_regex: \"blacklist overlayfs.*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"overlayfs .*\""
      "          expected_regex: \"overlayfs .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"overlayfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"	  
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install overlayfs .*\""
      "          expected_regex: \"install overlayfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist overlayfs.*\""
      "          expected_regex: \"blacklist overlayfs.*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}

benchmark_configs: {
  id: "squashfs-module-not-available"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:debian_linux:12.0" version: "1.1.0" benchmark_document: "CIS Debian Linux 12" }
    title: "Ensure squashfs kernel module is not available"
    description:
      "The squashfs filesystem type is a compressed read-only Linux "
      "filesystem embedded in small footprint systems (similar to cramfs ). A "
      "squashfs image can be used without having to first decompress the image."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack "
      "surface of the server. If this filesystem type is not needed, disable "
      "it."
    remediation:
      "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf "
      "with the lines that read install squashfs /bin/false and blacklist squashfs.\n"
      "Example: \n"
      "```\n"
      "printf \"install squashfs /bin/false "
      "blacklist squashfs "
      "\" >> /etc/modprobe.d/squashfs.conf "
      "```\n"
      "Run the following command to unload the squashfs module:\n"
      "```\n"
      "# rmmod squashfs\n"
      "```\n"
    cis_benchmark: {
      profile_level: 2
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"squashfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install squashfs .*\""
      "          expected_regex: \"install squashfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist squashfs.*\""
      "          expected_regex: \"blacklist squashfs.*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"squashfs .*\""
      "          expected_regex: \"squashfs .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/lib/modules/\""
      "        filename_regex: \"squashfs.ko\""
      "        recursive: true"
      "      }}"
      "      existence:{should_exist: false}"
      "    }"      
      "  }"	  
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install squashfs .*\""
      "          expected_regex: \"install squashfs /bin/(true|false)\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"blacklist squashfs.*\""
      "          expected_regex: \"blacklist squashfs.*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}