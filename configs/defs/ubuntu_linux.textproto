benchmark_configs: {
  id: "hfsplus-mounting-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure mounting of hfsplus filesystems is disabled"
    description:
      "The hfsplus filesystem type is a hierarchical filesystem designed to "
      "replace hfs that allows you to mount Mac OS filesystems."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack "
      "surface of the server. If this filesystem type is not needed, disable "
      "it."
    remediation:
      "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\n"
      "Example: vim /etc/modprobe.d/hfsplus.conf\n"
      "and add the following line:\n"
      "```\n"
      "install hfsplus /bin/true\n"
      "```\n"
      "Run the following command to unload the hfsplus module:\n"
      "```\n"
      "# rmmod hfsplus\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"hfsplus .*\""
      "          expected_regex: \"hfsplus .*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install hfsplus .*\""
      "          expected_regex: \"install hfsplus /bin/true\""
      "        }"
      "      }"
      "    }"
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/modprobe.d\"}}"
      "      existence:{should_exist: false}"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install hfsplus .*\""
      "          expected_regex: \"install hfsplus /bin/true\""
      "        }"
      "      }"
      "    }"
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/modprobe.d\"}}"
      "      existence:{should_exist: false}"
      "    }"
      "  }"
      "}}"
  }
}

benchmark_configs: {
  id: "jffs2-mounting-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure mounting of jffs2 filesystems is disabled"
    description:
      "The jffs2 (journaling flash filesystem 2) filesystem type is a "
      "log-structured filesystem used in flash memory devices."
    rationale:
      "Removing support for unneeded filesystem types reduces the local attack "
      "surface of the server. If this filesystem type is not needed, disable "
      "it."
    remediation:
      "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\n"
      "Example: vim /etc/modprobe.d/jffs2.conf\n"
      "and add the following line:\n"
      "```\n"
      "install jffs2 /bin/true\n"
      "```\n"
      "Run the following command to unload the jffs2 module:\n"
      "```\n"
      "# rmmod jffs2\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"jffs2 .*\""
      "          expected_regex: \"jffs2 .*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install jffs2 .*\""
      "          expected_regex: \"install jffs2 /bin/true\""
      "        }"
      "      }"
      "    }"
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/modprobe.d\"}}"
      "      existence:{should_exist: false}"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install jffs2 .*\""
      "          expected_regex: \"install jffs2 /bin/true\""
      "        }"
      "      }"
      "    }"
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/modprobe.d\"}}"
      "      existence:{should_exist: false}"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "usb-storage-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Disable USB Storage"
    description:
      "USB storage provides a means to transfer and store files insuring "
      "persistence and availability of the files independent of network "
      "connection status. Its popularity and utility has led to USB-based "
      "malware being a simple and common means for network infiltration and "
      "a first step to establishing a persistent threat within a networked "
      "environment"
    rationale:
      "Restricting USB access on the system will decrease the physical attack "
      "surface for a device and diminish the possible vectors to introduce "
      "malware."
    remediation:
      "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\n"
      "Example: vim /etc/modprobe.d/usb-storage.conf\n"
      "and add the following line:\n"
      "```\n"
      "install usb-storage /bin/true\n"
      "```\n"
      "Run the following command to unload the usb-storage module:\n"
      "```\n"
      "rmmod usb-storage\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/modules\"}}"
      "      content_entry:{"
      "        match_type: NONE_MATCH"
      "        match_criteria: {"
      "          filter_regex: \"usb-storage .*\""
      "          expected_regex: \"usb-storage .*\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install usb-storage .*\""
      "          expected_regex: \"install usb-storage /bin/true\""
      "        }"
      "      }"
      "    }"
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/modprobe.d\"}}"
      "      existence:{should_exist: false}"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/modprobe.d\""
      "        filename_regex: \".*\\\\.conf\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"install usb-storage .*\""
      "          expected_regex: \"install usb-storage /bin/true\""
      "        }"
      "      }"
      "    }"
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/modprobe.d\"}}"
      "      existence:{should_exist: false}"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "separate-partition-shm"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure /dev/shm is configured"
    description:
      "The /dev/shm directory is a world-writable directory that can function as shared memory"
      "that facilitates inter process communication (IPC)."
    rationale:
      "Making /dev/shm its own file system allows an administrator to set additional mount"
      "options such as the noexec option on the mount, making /dev/shm useless for an"
      "attacker to install executable code. It would also prevent an attacker from establishing a"
      "hard link to a system setuid program and wait for it to be updated. Once the program"
      "was updated, the hard link would be broken and the attacker would have his own copy"
      "of the program. If the program happened to have a security vulnerability, the attacker"
      "could continue to exploit the known flaw."
      "This can be accomplished by mounting tmpfs to /dev/shm."
    remediation:
      "For specific configuration requirements of the /dev/shm mount for your environment,"
      "modify /etc/fstab."
      "Example:\n"
      "tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{"
      "  instance_scanning: {"
      "    check_alternatives:{"
      "      file_checks:{"
      "        files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "        content_entry:{"
      "          match_type: ALL_MATCH_ANY_ORDER"
      "          match_criteria: {"
      "            filter_regex: \".* /dev/shm .*\""
      "            expected_regex: \".* /dev/shm .*\""
      "          }"
      "        }"
      "      }"
      "    }"
      "  }"
      "  image_scanning: {"
      "    check_alternatives:{"
      "      file_checks:{"
      "        files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "        content_entry:{"
      "          match_type: ALL_MATCH_ANY_ORDER"
      "          match_criteria: {"
      "            filter_regex: \".* /dev/shm .*\""
      "            expected_regex: \".* /dev/shm .*\""
      "          }"
      "        }"
      "      }"
      "    }"
      "  }"
      "}"
    }   
}
benchmark_configs: {
  id: "home-nosuid"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure nosuid option set on /home partition"
    description: "The nosuid mount option specifies thatthe filesystem cannot contain setuid files."
    rationale:
      "Since the /nome filesystem is only intended for user file storage, set this option to ensure "
      "that users cannot create setuid files in /home."
    remediation:
      "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the "
      "/home partition.\n"
      "Example:\n"
      "```\n"
      "<device> /home <fstype> defaults, rw,nosuid, nodev, noexec, relatime 0 0\n"
      "```\n"
      "Run the following command to remount /home with the configured options:\n"
      "```\n"
      "mount -o remount /home\n"
      "```\n"
      "References:\n"
      "1. See the fstab(5) manual page for more information."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "          filter_regex: \".* /home .* - .*\""
      "          expected_regex: \".* /home .*nosuid.* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "          filter_regex: \".* /home .* - .*\""
      "          expected_regex: \".* /home .* - .*\""
      "      }"
      "    }"
      "  }"
      "}}}"
  }
}
benchmark_configs: {
  id: "ptrace-scope-restricted"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure ptrace_scope is restricted"
    description:
      "This configuration ensures that the ptrace() system call is restricted to limit the ability of compromised processes to attach to other processes running under the same user, enhancing system security."
    rationale:
      "Enabling restricted mode limits the ability of compromised processes to attach to other processes running under the same user, reducing the scope of potential attacks."
    remediation:
      "Set the following parameter in `/etc/sysctl.conf` or a file in `/etc/sysctl.d/` ending in `.conf`:"
      "```"
      "kernel.yama.ptrace_scope = 1"
      "```"
      "Run the following command to set the active kernel parameter:"
      "```"
      "sysctl -w kernel.yama.ptrace_scope=1"
      "```"
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/sys/kernel/yama/ptrace_scope\"}}"
      "      content:{content:\"1\\n\"}"
      "    }"
      "  }"
      "}"
      "image_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/sysctl.conf\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"kernel\\\\.yama\\\\.ptrace_scope\\\\s*=\\\\s*.*\""
      "          expected_regex: \"kernel\\\\.yama\\\\.ptrace_scope\\\\s*=\\\\s*1\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/etc/sysctl.d\""
      "        recursive: true"
      "      }}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"kernel\\\\.yama\\\\.ptrace_scope\\\\s*=\\\\s*.*\""
      "          expected_regex: \"kernel\\\\.yama\\\\.ptrace_scope\\\\s*=\\\\s*1\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "ufw-uninstalled-or-disabled-with-nftables"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure ufw is uninstalled or disabled with nftables"
    description: 
      "Uncomplicated Firewall (UFW) is a program for managing a Netfilter firewall designed to be easy to use. Running both the nftables service and UFW may lead to conflict and unexpected results."
    rationale: 
      "Running both the nftables service and ufw may lead to conflict and unexpected results. Ensuring only one is active prevents issues."
    remediation: 
      "To remove or disable UFW, run one of the following:\n"
      "```"
      "# apt purge ufw\n"
      "-OR-\n"
      "# ufw disable\n"
      "# systemctl stop ufw.service\n"
      "# systemctl mask ufw.service\n"
      "```"
      "Note: Run `ufw disable` before `systemctl mask ufw.service` to ensure proper disabling of UFW."
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/lib/systemd/system/nftables.service\"}}"
      "    existence:{should_exist:true}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/systemd/system/multi-user.target.wants/ufw.service\"}}"
      "    existence:{should_exist:false}"
      "   }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "nftables-base-chains-exist"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure nftables Base Chains Exist"
    description: 
      "Chains are containers for rules in nftables. Base chains are entry points for packets from the networking stack, and their absence can result in packets not being processed as intended."
    rationale: 
      "Base chains with appropriate hooks ensure that packets flowing through input, forward, and output chains are processed as expected, providing the foundation for proper firewall functionality."
    remediation: 
      "Run the following command to create the base chains:"
      "```"
      "# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 ; }"
      "```"
      "Example:"
      "```"
      "# nft create chain inet filter input { type filter hook input priority 0 ; }"
      "# nft create chain inet filter forward { type filter hook forward priority 0 ; }"
      "# nft create chain inet filter output { type filter hook output priority 0 ; }"
      "```"
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/nftables.conf\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*type filter hook input priority 0;$\""
      "          expected_regex: \"\\\\s*type filter hook input priority 0;$\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/nftables.conf\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*type filter hook forward priority 0;$\""
      "          expected_regex: \"\\\\s*type filter hook forward priority 0;$\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/nftables.conf\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*type filter hook output priority 0;$\""
      "          expected_regex: \"\\\\s*type filter hook output priority 0;$\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "nftables-loopback-traffic-configured"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure nftables Loopback Traffic is Configured"
    description: 
      "Configuring loopback traffic ensures that internal communication between processes on the machine is maintained while preventing spoofing attacks by dropping loopback traffic on other interfaces."
    rationale: 
      "The loopback interface is critical for system operation as it handles communication within the system itself. Blocking loopback traffic on non-loopback interfaces prevents potential spoofing attacks."
    remediation: 
      "Run the following commands to configure loopback traffic rules:"
      "```"
      "# nft add rule inet filter input iif lo accept"
      "# nft add rule inet filter input ip saddr 127.0.0.0/8 counter drop"
      "```"
      "If IPv6 is enabled on the system, run:"
      "```"
      "# nft add rule inet filter input ip6 saddr ::1 counter drop"
      "```"
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/nftables.conf\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*iif \\\"lo\\\" accept\""
      "          expected_regex: \"\\\\s*iif \\\"lo\\\" accept\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/nftables.conf\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*ip saddr 127\\\\.0\\\\.0\\\\.0/8 counter drop\""
      "          expected_regex: \"\\\\s*ip saddr 127\\\\.0\\\\.0\\\\.0/8 counter drop\""
      "        }"
      "      }"
      "    }"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/nftables.conf\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*ip6 saddr ::1 counter drop\""
      "          expected_regex: \"\\\\s*ip6 saddr ::1 counter drop\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "nftables-service-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure nftables service is enabled"
    description: 
      "The nftables service allows for the loading of nftables rulesets during boot, or starting on"
      "the nftables service"
    rationale:
      "The nftables service restores the nftables rules from the rules files referenced in the"
      "/etc/nftables.conf file during boot or the starting of the nftables service"
    remediation:
      "Run the following command to enable the nftables service:"
      "```"
      "# systemctl enable nftables "
      "```"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "generic:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "         dir_path:\"/lib/systemd/system/\""
      "        recursive: true"
      "        filename_regex: \"nftables.service\""
      "       }"
      "      }"
      "      existence:{should_exist:true}"
      "    }"
      "}}"
  }
}
benchmark_configs: {
  id: "ufw-uninstalled-or-disabled-with-nftables"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure ufw is uninstalled or disabled with nftables"
    description: 
      "Uncomplicated Firewall (UFW) is a program for managing a Netfilter firewall designed to be easy to use. Running both the nftables service and UFW may lead to conflict and unexpected results."
    rationale: 
      "Running both the nftables service and ufw may lead to conflict and unexpected results. Ensuring only one is active prevents issues."
    remediation: 
      "To remove or disable UFW, run one of the following:\n"
      "```"
      "# apt purge ufw\n"
      "-OR-\n"
      "# ufw disable\n"
      "# systemctl stop ufw.service\n"
      "# systemctl mask ufw.service\n"
      "```"
      "Note: Run `ufw disable` before `systemctl mask ufw.service` to ensure proper disabling of UFW."
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions:
      "scan_type_specific:{instance_scanning:{check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/lib/systemd/system/nftables.service\"}}"
      "    existence:{should_exist:true}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/systemd/system/multi-user.target.wants/ufw.service\"}}"
      "    existence:{should_exist:false}"
      "   }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "iptables-default-deny-policy"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure iptables Default Deny Firewall Policy"
    description: 
      "A default deny all policy on connections ensures that any unconfigured network usage will be rejected."
    rationale: 
      "With a default accept policy, the firewall will accept any packet that is not configured to be denied. It is easier to whitelist acceptable usage than to blacklist unacceptable usage."
    remediation: 
      "Run the following commands to implement a default DROP policy:"
      "```"
      "# iptables -P INPUT DROP"
      "# iptables -P OUTPUT DROP"
      "# iptables -P FORWARD DROP"
      "```"
      "Note: Changing firewall settings while connected over network can result in being locked out of the system."
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions: 
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/iptables/rules.v4\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_STRICT_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*:INPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "          expected_regex: \"\\\\s*:INPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*:FORWARD\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "          expected_regex: \"\\\\s*:FORWARD\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*:OUTPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "          expected_regex: \"\\\\s*:OUTPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "iptables-loopback-traffic-configured"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure iptables Loopback Traffic is Configured"
    description: 
      "Configure the loopback interface to accept traffic and deny traffic to the loopback network on all other interfaces (127.0.0.0/8)."
    rationale: 
      "Loopback traffic is critical for internal communication between processes on a machine. Denying loopback traffic on other interfaces prevents spoofing attacks."
    remediation: 
      "Run the following commands to implement the loopback rules:"
      "```"
      "# iptables -A INPUT -i lo -j ACCEPT"
      "# iptables -A OUTPUT -o lo -j ACCEPT"
      "# iptables -A INPUT -s 127.0.0.0/8 -j DROP"
      "```"
      "Note: Changing firewall settings while connected over a network can result in being locked out of the system."
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions: 
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/iptables/rules.v4\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_STRICT_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"-A INPUT -i lo -j ACCEPT\""
      "          expected_regex: \"-A INPUT -i lo -j ACCEPT\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"-A INPUT -s 127\\\\.0\\\\.0\\\\.0/8 -j DROP\""
      "          expected_regex: \"-A INPUT -s 127\\\\.0\\\\.0\\\\.0/8 -j DROP\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"-A OUTPUT -o lo -j ACCEPT\""
      "          expected_regex: \"-A OUTPUT -o lo -j ACCEPT\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "ip6tables-default-deny-policy"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure iptables Default Deny Firewall Policy"
    description: 
      "A default deny all policy on connections ensures that any unconfigured network usage will be rejected."
    rationale: 
      "With a default accept policy, the firewall will accept any packet that is not configured to be denied. It is easier to whitelist acceptable usage than to blacklist unacceptable usage."
    remediation: 
      "Run the following commands to implement a default DROP policy:"
      "```"
      "# ip6tables -P INPUT DROP"
      "# ip6tables -P OUTPUT DROP"
      "# ip6tables -P FORWARD DROP"
      "```"
      "Note: Changing firewall settings while connected over network can result in being locked out of the system."
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions: 
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/iptables/rules.v6\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_STRICT_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*:INPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "          expected_regex: \"\\\\s*:INPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*:FORWARD\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "          expected_regex: \"\\\\s*:FORWARD\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"\\\\s*:OUTPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "          expected_regex: \"\\\\s*:OUTPUT\\\\s+DROP\\\\s+\\\\[\\\\d+:\\\\d+\\\\]$\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "ip6tables-loopback-traffic-configured"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure ip6tables Loopback Traffic is Configured"
    description: 
      "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1)."
    rationale: 
      "Loopback traffic is generated between processes on the machine and is typically critical to the operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen; all other interfaces should ignore traffic on this network as an anti-spoofing measure."
    remediation: 
      "Run the following commands to implement the loopback rules:"
      "```"
      "# ip6tables -A INPUT -i lo -j ACCEPT"
      "# ip6tables -A OUTPUT -o lo -j ACCEPT"
      "# ip6tables -A INPUT -s ::1 -j DROP"
      "```"
      "Note: Changing firewall settings while connected over the network can result in being locked out of the system."
    cis_benchmark: {
      profile_level: 1
      severity: MEDIUM
    }
    scan_instructions: 
      "scan_type_specific:{instance_scanning:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/iptables/rules.v6\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_STRICT_ORDER"
      "        match_criteria:{"
      "          filter_regex: \"-A INPUT -i lo -j ACCEPT\""
      "          expected_regex: \"-A INPUT -i lo -j ACCEPT\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"-A INPUT -s ::1(/128)? -j DROP\""
      "          expected_regex: \"-A INPUT -s ::1(/128)? -j DROP\""
      "        }"
      "        match_criteria:{"
      "          filter_regex: \"-A OUTPUT -o lo -j ACCEPT\""
      "          expected_regex: \"-A OUTPUT -o lo -j ACCEPT\""
      "        }"
      "      }"
      "    }"
      "  }"
      "}}"
  }
}
benchmark_configs: {
  id: "systemd-journal-remote-installed"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure systemd-journal-remote is installed"
    description:
      "Journald (via systemd-journal-remote) supports the ability to send log events it gathers to "
      "a remote log host or to receive messages from remote hosts, thus enabling centralised log "
      "management."
    rationale:
      "Storing log data on a remote host protects log integrity from local attacks. If an attacker "
      "gains root access on the local system, they could tamper with or remove log data that is "
      "stored on the local system."
    remediation:
      "Run the following command to install systemd-journal-remote:\n"
      "```\n"
      "apt install systemd-journal-remote"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "generic:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "    files_to_check:{single_file:{path:\"/usr/lib/systemd/systemd-journal-remote\"}}"
      "    existence:{should_exist:true}"
      "    }"
      "}}"
  }
}
benchmark_configs: {
  id: "systemd-journal-upload-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:debian:ubuntu_linux:22.04" version: "1.0.0" benchmark_document: "CIS Ubuntu 22.04" }
    title: "Ensure systemd-journal-upload is enabled and active"
    description:
      "Journald (via systemd-journal-remote) supports the ability to send log events it gathers to "
      "a remote log host or to receive messages from remote hosts, thus enabling centralised log "
      "management."
    rationale:
      "Storing log data on a remote host protects log integrity from local attacks. If an attacker "
      "gains root access on the local system, they could tamper with or remove log data that is "
      "stored on the local system."
    remediation:
      "Run the following command to enable systemd-journal-remote:\n"
      "```\n"
      "systemctl --now enable systemd-journal-upload.service"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "generic:{"
      "  check_alternatives:{"
      "    file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/systemd/system/multi-user.target.wants/systemd-journal-upload.service\"}}"
      "    existence:{should_exist:true}"
      "    }"
      "}}"
  }
}