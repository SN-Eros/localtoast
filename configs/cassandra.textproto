benchmark_configs: {
  id: "cassandra-usergroup"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Ensure a separate user and group exist for Cassandra"
    description:
      "Checks whether the Cassandra User and Group exists on the linux system"
    rationale:
      "All processes need to run as a user with least privilege. "
      "This mitigates the potential impact of malware to the system."
    remediation:
      "Create a group for cassandra (if it does not already exist): "
      "```sudo groupadd cassandra```"
      "Create a user which is only used for running Cassandra and its related processes. "
      "```sudo useradd -m -d /home/cassandra -s /bin/bash -g cassandra -u <USERID_NUMBER> cassandra```"
      "Replacing <USERID_NUMBER> with a number not already used on the server."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/passwd\"}}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"(^|\\n)cassandra:.*\""
      "        expected_regex: \"(^|\\n)cassandra:.*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group\"}}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"(^|\\n)cassandra:.*\""
      "        expected_regex: \"(^|\\n)cassandra:.*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}

benchmark_configs: {
  id: "cassandra-clocksync"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Ensure clocks are synchronized on all nodes"
    description:
      "Checks whether the clocks on all nodes is in sync"
      "In particular, this checks the existance of a time synchronization daemon such as ntp, chronyd or systemd-timesyn"
    rationale:
      "Cassandra decides which data is most current between all of "
      "the nodes in the cluster based on timestamps. It is paramount "
      "to ensure all clocks are in-sync, otherwise the most current "
      "data may not be returned or worse, marked for deletion."
    remediation:
      "Install and start the time protocol on every node in the Cassandra cluster."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
      "check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{process_path:{proc_name:\"chronyd\"}}"
      "      existence:{should_exist:true}"
      "    }"
      "}"
      "check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{process_path:{proc_name:\"ntp\"}}"
      "      existence:{should_exist:true}"
      "    }"
      "}"
      "check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{process_path:{proc_name:\"systemd-timesyn\"}}"
      "      existence:{should_exist:true}"
      "    }"
      "}"
  }
}

benchmark_configs: {
  id: "cassandra-authentication"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Ensure that authentication is enabled for Cassandra databases"
    description:
      "Authentication is pluggable in Cassandra and is configured using the authenticator setting "
      "in cassandra.yaml. Cassandra ships with two options included in the default distribution, "
      "AllowAllAuthenticator and PasswordAuthenticator. The default, "
      "AllowAllAuthenticator, performs no authentication checks and therefore requires no "
      "credentials. It is used to disable authentication completely. The second option, "
      "PasswordAuthenticator, stores encrypted credentials in a system table. This can be used "
      "to enable simple username/password authentication. "
    rationale:
      "Authentication is a necessary condition of Cassandraâ€™s permissions subsystem, so if "
      "authentication is disabled then so are permissions. Failure to authenticate clients, users, "
      "and/or servers can allow unauthorized access to the Cassandra database and can prevent "
      "tracing actions back to their sources. The authentication mechanism should be "
      "implemented before anyone accesses the Cassandra server. "
    remediation:
      "To enable the authentication mechanism: "
      "1. Stop the Cassandra database. "
      "2. Modify cassandra.yaml file to modify/add entry for authenticator: set it to "
      "PasswordAuthenticator "
      "3. Start the Cassandra database. "
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
    "check_alternatives:{"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    existence:{should_exist: true}"
    "    non_compliance_msg: \"Cassandra configuration file does not exist\""
    "  }"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    content_entry: {"
    "      match_type: NONE_MATCH"
    "      match_criteria: {"
    "        filter_regex: \"authenticator: .*\""
    "        expected_regex: \"authenticator: AllowAllAuthenticator\""
    "      }"
    "    }"
    "    non_compliance_msg: \"Cassandra is configured without password authentication\""
    "  }"
    "}"
  }
}

benchmark_configs: {
  id: "cassandra-authorization"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Ensure that authorization is enabled for Cassandra databases"
    description:
      "Authorization is pluggable in Cassandra and is configured using the authorizer setting in "
      "cassandra.yaml. Cassandra ships with two options included in the default distribution, "
      "AllowAllAuthenticator and CassandraAuthorizer. The default, AllowAllAuthenticator "
      "performs no checking which grants all permissions to all roles. The second option, "
      "CassandraAuthorizer, implements full permissions management functionality and stores "
      "its data in Cassandra system tables."
    rationale:
      "Authorizing roles is an important step towards ensuring only authorized access to the "
      "Cassandra database tables is permitted. It also provides the requisite means of "
      "implementing least privilege best practices. The authorization mechanism should be "
      "implemented before anyone accesses the Cassandra database."
    remediation:
      "To enable the authorization mechanism: "
      "1. Stop the Cassandra database. "
      "2. Modify cassandra.yaml file to modify/add entry for authorization: set it to CassandraAuthorizer "
      "3. Start the Cassandra database."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
    "check_alternatives:{"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    existence:{should_exist: true}"
    "    non_compliance_msg: \"Cassandra configuration file does not exist\""
    "  }"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    content_entry: {"
    "      match_type: NONE_MATCH"
    "      match_criteria: {"
    "        filter_regex: \"authorizer: .*\""
    "        expected_regex: \"authorizer: AllowAllAuthorizer\""
    "      }"
    "    }"
    "    non_compliance_msg: \"Cassandra is configured without proper authorization\""
    "  }"
    "}"
  }
}

benchmark_configs: {
  id: "cassandra-internodeencryption"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Inter-node Encryption"
    description:
      "Cassandra offers the option to encrypt data in transit between nodes on the cluster. By "
      "default, inter-node encryption is turned off. "
    rationale:
      "Data being transferred on the wire should be encrypted to avoid network snooping, whether legitimate or not."
    remediation:
      "The inter-node encryption should be implemented before anyone accesses the Cassandra server."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
    "check_alternatives:{"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    existence:{should_exist: true}"
    "    non_compliance_msg: \"Cassandra configuration file does not exist\""
    "  }"

    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    content_entry: {"
    "      match_type: NONE_MATCH"
    "      match_criteria: {"
    "        filter_regex: \"\\\\s*internode_encryption:.*\""
    "        expected_regex: \"\\\\s*internode_encryption:\\\\s*none\""
    "      }"
    "    }"
    "    non_compliance_msg: \"Cassandra does not encrypt internode communication\""
    "  }"
    "}"
  }
}

benchmark_configs: {
  id: "cassandra-logginglevel"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Ensure that Cassandra only listens for network connections on authorized interfaces"
    description:
      "Apache Cassandra uses Logback for logging functionality. While this can be set using "
      "nodetool setlogginglevel changes made using this method will be reverted to the level "
      "specified in the logback.xml file the next time the process restarts."
    rationale:
      "If logging is not enabled, issues may go undiscovered, and compromises and other "
      "incidents may occur without being quickly detected. It may also not be possible to provide "
      "evidence of compliance with security laws, regulations, and other requirements."
    remediation:
      "Enable the Cassandra Logging setting it's logging level to INFO."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
    "check_alternatives:{"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/logback.xml\"}}"
    "    existence:{should_exist: true}"
    "    non_compliance_msg: \"Cassandra logback.xml configuration file does not exist\""
    "  }"

    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/logback.xml\"}}"
    "    content_entry: {"
    "      match_type: NONE_MATCH"
    "      match_criteria: {"
    "        filter_regex: \".*?<level>.*?</level>.*?\""
    "        expected_regex: \".*?<level>OFF</level>.*?\""
    "      }"
    "    }"
    "    non_compliance_msg: \"Cassandra has logging disabled\""
    "  }"

    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/logback.xml\"}}"
    "    content_entry: {"
    "      match_type: NONE_MATCH"
    "      match_criteria: {"
    "        filter_regex: \".*?level=\\\".*?\\\".*?\""
    "        expected_regex: \".*?level=\\\"OFF\\\".*?\""
    "      }"
    "    }"
    "    non_compliance_msg: \"Cassandra has logging disabled\""
    "  }"
    "}"
  }
}

benchmark_configs: {
  id: "cassandra-networkinterfaces"
  compliance_note: {
    version: { version: "1.0.0" benchmark_document: "CIS Apache Cassandra" }
    title: "Ensure that Cassandra only listens for network connections on authorized interfaces"
    description:
      "When listen_address is blank and listen_interface is commented out, this will be set "
      "automatically by InetAddress.getLocalHost(). Presuming the node is configured "
      "correctly, e.g. hostname, name resolution, etc., this will configure the node to use the "
      "address associated with the hostname. The listen_address must not be set to 0.0.0.0."
    rationale:
      "Setting the address or interface to bind to will tell other Cassandra nodes to which address "
      "or interface to connect. This must be changed from the default in order for multiple nodes "
      "to be able to communicate."
    remediation:
      "Set the listen_address or listen_interface, not both, in the cassandra.yaml to an"
      "authorized address or interface."
    cis_benchmark: {
      profile_level: 1
      severity: HIGH
    }
    scan_instructions:
    "check_alternatives:{"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    existence:{should_exist: true}"
    "    non_compliance_msg: \"Cassandra configuration file does not exist\""
    "  }"
    "  file_checks:{"
    "    files_to_check:{single_file:{path:\"/etc/cassandra/cassandra.yaml\"}}"
    "    content_entry: {"
    "      match_type: NONE_MATCH"
    "      match_criteria: {"
    "        filter_regex: \"listen_address:.*\""
    "        expected_regex: \"listen_address:[\\\\s]*0\\\\.0\\\\.0\\\\.0\""
    "      }"
    "    }"
    "    non_compliance_msg: \"Cassandra is configured to listen on all interfaces (0.0.0.0)\""
    "  }"
    "}"
  }
}