load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

package(default_visibility = ["//visibility:public"])

go_library(
    name = "configchecks",
    srcs = [
        "check_common.go",
        "content_entry_file_check.go",
        "file_check.go",
        "group_criteria.go",
        "sql_check.go",
    ],
    importpath = "github.com/google/localtoast/library/configchecks",
    deps = [
        ":fileset",
        ":repeatconfig",
        "//library/proto:api_go_proto",
        "//library/proto:scan_instructions_go_proto",
        "@go_googleapis//grafeas/v1:grafeas_go_proto",
        "@org_golang_google_protobuf//encoding/prototext",
        "@org_golang_google_protobuf//proto",
    ],
)

go_library(
    name = "fileset",
    srcs = ["file_set.go"],
    importpath = "github.com/google/localtoast/library/fileset",
    deps = [
        "//library/proto:api_go_proto",
        "//library/proto:scan_instructions_go_proto",
        "@org_golang_google_protobuf//encoding/prototext",
    ],
)

go_test(
    name = "fileset_test",
    size = "small",
    srcs = ["file_set_test.go"],
    deps = [
        ":fileset",
        "//library/proto:api_go_proto",
        "//library/proto:scan_instructions_go_proto",
        "@com_github_google_go_cmp//cmp:go_default_library",
    ],
)

go_test(
    name = "configchecks_test",
    size = "small",
    srcs = [
        "configchecks_test.go",
        "content_entry_file_check_test.go",
        "file_check_test.go",
        "group_criteria_test.go",
        "sql_check_test.go",
    ],
    deps = [
        ":configchecks",
        ":fileset",
        "//library/proto:api_go_proto",
        "//library/proto:scan_instructions_go_proto",
        "//library/testing:testconfigcreator",
        "@com_github_google_go_cmp//cmp:go_default_library",
        "@go_googleapis//grafeas/v1:grafeas_go_proto",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)

go_library(
    name = "repeatconfig",
    srcs = ["repeat_config.go"],
    importpath = "github.com/google/localtoast/library/repeatconfig",
    deps = [
        "//library/proto:scan_instructions_go_proto",
        "@org_golang_google_protobuf//proto",
    ],
)

go_test(
    name = "repeatconfig_test",
    size = "small",
    srcs = [
        "repeat_config_test.go",
    ],
    deps = [
        ":repeatconfig",
        "//library/proto:scan_instructions_go_proto",
        "@com_github_google_go_cmp//cmp:go_default_library",
        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)

go_library(
    name = "scanner",
    srcs = [
        "api_error_wrapper.go",
        "scanner.go",
        "version.go",
    ],
    importpath = "github.com/google/localtoast/library/scanner",
    deps = [
        ":configchecks",
        "//library/proto:api_go_proto",
        "@go_googleapis//grafeas/v1:grafeas_go_proto",
        "@org_golang_google_protobuf//types/known/timestamppb",
    ],
)

go_test(
    name = "scanner_test",
    size = "small",
    srcs = ["scanner_test.go"],
    deps = [
        ":scanner",
        "//library/proto:api_go_proto",
        "//library/proto:scan_instructions_go_proto",
        "//library/testing:testconfigcreator",
        "@com_github_google_go_cmp//cmp:go_default_library",
        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
        "@go_googleapis//grafeas/v1:grafeas_go_proto",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)
